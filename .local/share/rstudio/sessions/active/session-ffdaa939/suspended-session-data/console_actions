{
    "type": [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1
    ],
    "data": [
        "p <- pca(rld_counts, metadata = samples)",
        "> ",
        "",
        "> ",
        "biplot(p,",
        "+ ",
        "       colby = 'condition',",
        "+ ",
        "       colkey = c('tumour'='royalblue', 'control'='red1'),",
        "+ ",
        "       hline = 0,",
        "+ ",
        "       vline = 0,",
        "+ ",
        "       legendPosition = 'right',",
        "+ ",
        "       legendLabSize = 12,",
        "+ ",
        "       legendIconSize = 8.0,",
        "+ ",
        "       title = 'PCA bi-plot',",
        "+ ",
        "       subtitle = 'PC1 versus PC2')",
        "> ",
        "tumour_v_ctrl <- results(dds, filterFun=ihw, alpha=0.05, c(\"condition\", \"tumour\", \"control\"))",
        "> ",
        "res1 <- lfcShrink(dds=dds, res=tumour_v_ctrl, coef=4, type=\"apeglm\")",
        "> ",
        "summary(res1)",
        "\nout of 21474 with nonzero total read count\nadjusted p-value < 0.05\nLFC > 0 (up)       : 269, 1.3%\nLFC < 0 (down)     : 199, 0.93%\noutliers [1]       : 0, 0%\n[1] see 'cooksCutoff' argument of ?results\nsee metadata(res)$ihwResult on hypothesis weighting\n\n",
        "> ",
        "get_upregulated <- function(df){",
        "+ ",
        "    key <- intersect(rownames(df)[which(df$log2FoldChange>=1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "  results <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "    return(results)",
        "+ ",
        "}",
        "> ",
        "get_downregulated <- function(df){",
        "+ ",
        "    key <- intersect(rownames(df)[which(df$log2FoldChange<=-1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "    results <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "    return(results)",
        "+ ",
        "}",
        "> ",
        "annotate_de_genes <- function(df){",
        "+ ",
        "",
        "+ ",
        "    df$hgnc_symbol <- rownames(df)",
        "+ ",
        "    mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "+ ",
        "    info <- getBM(attributes=c(\"hgnc_symbol\",",
        "+ ",
        "                               \"ensembl_gene_id_version\",",
        "+ ",
        "                               \"chromosome_name\",",
        "+ ",
        "                               \"start_position\",",
        "+ ",
        "                               \"end_position\",",
        "+ ",
        "                               \"strand\",",
        "+ ",
        "                               \"entrezgene_description\"),",
        "+ ",
        "                  filters = c(\"hgnc_symbol\"),",
        "+ ",
        "                  values = df$hgnc_symbol,",
        "+ ",
        "                  mart = mart,",
        "+ ",
        "                  useCache=FALSE)",
        "+ ",
        "",
        "+ ",
        "    tmp <- merge(df, info, by=\"hgnc_symbol\")",
        "+ ",
        "    tmp$strand <- gsub(\"-1\", \"-\", tmp$strand)",
        "+ ",
        "    tmp$strand <- gsub(\"1\", \"+\", tmp$strand)",
        "+ ",
        "    tmp$hgnc_symbol <- make.names(tmp$hgnc_symbol, unique = T)",
        "+ ",
        "    tmp <- tmp[!grepl(\"CHR\", tmp$chromosome_name),]",
        "+ ",
        "",
        "+ ",
        "    output_col <- c(\"Gene\", \"Ensembl ID\", \"Chromosome\", \"Start\", \"Stop\", \"Strand\", \"Description\", \"Log2FC\", \"P-value\", \"Adj P-value\")",
        "+ ",
        "    tmp <- subset(tmp, select=c(hgnc_symbol, ensembl_gene_id_version, chromosome_name, start_position, end_position, strand, entrezgene_description, log2FoldChange, pvalue, padj))",
        "+ ",
        "    colnames(tmp) <- output_col",
        "+ ",
        "",
        "+ ",
        "    if(min(tmp$Log2FC) > 0){",
        "+ ",
        "        tmp <- tmp[order(-tmp$Log2FC),]",
        "+ ",
        "    }else{",
        "+ ",
        "        tmp <- tmp[order(tmp$Log2FC),]",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    return(tmp)",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "de_up <- get_upregulated(as.data.frame(res1))",
        "> ",
        "de_down <- get_downregulated(as.data.frame(res1))",
        "> ",
        "upregulated_genes <- annotate_de_genes(de_up)",
        "> ",
        "downregulated_genes <- annotate_de_genes(de_down)",
        "> ",
        "",
        "> ",
        "#confirm these worked",
        "> ",
        "head(upregulated_genes)",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                lab=rownames(res1),",
        "+ ",
        "                x=\"log2FoldChange\",",
        "+ ",
        "                y=\"pvalue\",",
        "+ ",
        "                selectLab=plot_top_20,",
        "+ ",
        "                drawConnectors=TRUE,",
        "+ ",
        "                legendPosition = \"none\",",
        "+ ",
        "                FCcutoff=1.0,",
        "+ ",
        "                pCutoff=0.05,",
        "+ ",
        "                title=\"Volcano Plot\",",
        "+ ",
        "                subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                caption = paste0('Total Genes = ', nrow(res1)),",
        "+ ",
        "                xlim=c(min_width, max_width),",
        "+ ",
        "                ylim=c(0, max_height))",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                lab=rownames(res1),",
        "+ ",
        "                x=\"log2FoldChange\",",
        "+ ",
        "                y=\"pvalue\",",
        "+ ",
        "                selectLab=plot_top_20,",
        "+ ",
        "                drawConnectors=TRUE,",
        "+ ",
        "                legendPosition = \"none\",",
        "+ ",
        "                FCcutoff=1.0,",
        "+ ",
        "                pCutoff=0.05,",
        "+ ",
        "                title=\"Volcano Plot\",",
        "+ ",
        "                subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                caption = paste0('Total Genes = ', nrow(res1)),",
        "+ ",
        "                xlim=c(min_width, max_width),",
        "+ ",
        "                ylim=c(0, max_height))",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "subset <- rld_counts[, 1:6]",
        "> ",
        "",
        "> ",
        "up <- rownames(de_up)",
        "> ",
        "down <- rownames(de_down)",
        "> ",
        "",
        "> ",
        "key <- c(up, down)",
        "> ",
        "subset <- subset[which(rownames(subset) %in% key),]",
        "> ",
        "",
        "> ",
        "mat <- as.matrix(scale(t(subset), center = T))",
        "> ",
        "",
        "> ",
        "ann <- data.frame(Condition = c(rep(\"Control\", 3), rep(\"Tumour\", 3)))",
        "> ",
        "rownames(ann) <- rownames(mat)",
        "> ",
        "col <- c(\"blue\", \"forestgreen\")",
        "> ",
        "names(col) <- c(\"Control\", \"Tumour\")",
        "> ",
        "ann_col <- list(Condition = col)",
        "> ",
        "",
        "> ",
        "pheatmap(t(mat), ",
        "+ ",
        "         show_rownames = FALSE,",
        "+ ",
        "         annotation_col = ann,",
        "+ ",
        "         annotation_colors = ann_col,",
        "+ ",
        "         color = hcl.colors(100, \"PRGn\",rev=F))",
        "> ",
        "res <- as.data.frame(res1) # tumour vs control",
        "> ",
        "res$hgnc_symbol <- rownames(res)",
        "> ",
        "",
        "> ",
        "fgsea_rank <- res %>%",
        "+ ",
        "              dplyr::select(hgnc_symbol, log2FoldChange) %>%",
        "+ ",
        "              na.omit() %>%",
        "+ ",
        "              distinct() %>%",
        "+ ",
        "              group_by(hgnc_symbol) %>%",
        "+ ",
        "              summarize(stat=mean(log2FoldChange))",
        "> ",
        "",
        "> ",
        "fgsea_rank",
        "> ",
        "rank <- deframe(fgsea_rank)",
        "> ",
        "head(rank, 20)",
        "                       A1BG          A1CF           A2M         A2ML1         A2MP1 \n-9.355768e-03 -3.270580e-03  2.773951e-04 -1.284149e-01  1.943566e-02  1.579854e-02 \n      A3GALT2        A4GALT         A4GNT          AAAS          AACS        AACSP1 \n-1.666595e-06  3.278406e-03 -1.359387e-03 -2.064792e-02 -1.417992e-01 -2.394784e-03 \n        AADAC       AADACL3       AADACL4         AADAT         AAGAB          AAK1 \n-6.774471e-04 -5.010265e-05  1.200635e-03  3.039472e-02 -1.075084e-01  2.449760e-02 \n        AAMDC ",
        "         AAMP \n-1.166257e-02 -1.200673e-02 \n",
        "> ",
        "pathway <- gmtPathways(\"/home/rstudio/c6.all.v2023.2.Hs.symbols.gmt\")",
        "> ",
        "head(pathway, 1)",
        "$AKT_UP.V1_DN\n  [1] \"ACKR3\"    \"ADGRL1\"   \"ADHFE1\"   \"ALPL\"     \"AMPD2\"    \"ANGPTL4\"  \"AQP5\"    \n  [8] \"ASF1A\"    \"ASS1\"     \"AXIN2\"    \"BCS1L\"    \"BEX4\"     \"BLVRB\"    \"BTBD2\"   \n [15] \"C11orf71\" \"C1R\"      \"C1S\"      \"CAP2\"     \"CAV2\"     \"CBS\"      \"CD248\"   \n [22] \"CDC42BPA\" \"CDH16\"    \"CDPF1\"    \"CELA1\"    \"CHAD\"     \"CHN2\"     \"CHST12\"  \n [29] \"CNN2\"     \"COL17A1\"  \"CSDC2\"    \"DNAJA3\"   \"DPT\"      \"DRAM1\"    \"EDARADD\" \n [36] \"EFEMP1\"   \"EFEMP2\"   \"EIF4E3\"   \"ESR2\"     \"EXOSC1\"   \"FAH\"      \"FAM20C\"  \n",
        " [43] \"FANK1\"    \"FAS\"      \"FBXO32\"   \"FHOD3\"    \"FKBP11\"   \"FMO2\"     \"FMO3\"    \n [50] \"FUT10\"    \"FUT8\"     \"FXYD1\"    \"G6PC2\"    \"GALNT16\"  \"GAS1\"     \"GATAD2B\" \n [57] \"GHR\"      \"GNA14\"    \"GNMT\"     \"GRAMD1A\"  \"GSPT2\"    \"GSTA4\"    \"HEBP1\"   \n [64] \"HIC1\"     \"HMGCS2\"   \"HPS1\"     \"HTRA1\"    \"IBSP\"     \"ID3\"      \"IFFO1\"   \n [71] \"IFRD2\"    \"IL13RA1\"  \"IL17RC\"   \"IRS1\"     \"IRS2\"     \"ISLR\"     \"ITGBL1\"  \n [78] \"ITIH5\"    \"ITPKB\"    \"KCNK3\"    \"KCNN4\"    \"KCTD12\"   \"KLF2\"     \"KRT15\"   \n [85] \"KRT5\"    ",
        " \"LIMD1\"    \"LPL\"      \"LTC4S\"    \"MATN2\"    \"MEPE\"     \"MERTK\"   \n [92] \"MMAA\"     \"MOCOS\"    \"MRPS6\"    \"MSL2\"     \"MSRB2\"    \"MYOC\"     \"NAT8\"    \n [99] \"NCAM1\"    \"NID1\"     \"NR1D1\"    \"NT5DC3\"   \"OGN\"      \"PADI3\"    \"PAQR7\"   \n[106] \"PDE4B\"    \"PDE9A\"    \"PDGFRA\"   \"PDIA5\"    \"PDLIM3\"   \"PDLIM4\"   \"PDZRN3\"  \n[113] \"PHF1\"     \"PI16\"     \"PKP1\"     \"PLA2G4A\"  \"PLEK2\"    \"PLPP3\"    \"PLTP\"    \n[120] \"PM20D1\"   \"PNLIPRP1\" \"POLD2\"    \"POLI\"     \"PPP1R3C\"  \"PROM1\"    \"PTGIS\"   \n[127] \"PUS7\"     \"RAMP1\"    \"RCE1\"    ",
        " \"RECK\"     \"RMND1\"    \"RNF25\"    \"RORC\"    \n[134] \"RPAP3\"    \"RPS6KB2\"  \"RTKN\"     \"RXRB\"     \"S1PR3\"    \"SASH1\"    \"SATB1\"   \n[141] \"SCARA3\"   \"SCARA5\"   \"SCCPDH\"   \"SERPINF2\" \"SFRP2\"    \"SH3BGR\"   \"SIRT3\"   \n[148] \"SIX5\"     \"SLC18A1\"  \"SLC22A12\" \"SLC37A4\"  \"SLC39A13\" \"SLC39A4\"  \"SLC7A5\"  \n[155] \"SLCO3A1\"  \"SLIT3\"    \"SMARCD3\"  \"SNHG6\"    \"STAT5A\"   \"STMP1\"    \"SULT1E1\" \n[162] \"SYPL2\"    \"TCAF2\"    \"TCF21\"    \"TCF3\"     \"TEC\"      \"TIMP3\"    \"TNFRSF19\"\n[169] \"TNNC2\"    \"TNS2\"     \"TP53I13\"  \"TPD52L1\"  \"TSPAN4\"  ",
        " \"TSPYL4\"   \"TULP3\"   \n[176] \"TYW1\"     \"UPB1\"     \"VSIG2\"    \"WIF1\"     \"ZC3H12C\"  \"ZDHHC6\"   \"ZEB1\"    \n[183] \"ZFYVE21\"  \"ZNF213\"   \"ZNF385A\"  \"ZNF771\"   \"ZSCAN26\" \n\n",
        "> ",
        "fgsea <- fgsea(pathways=pathway, stats=rank, nperm=1000)",
        "> ",
        "",
        "> ",
        "fgseaResTidy <- fgsea %>%",
        "+ ",
        "  as_tibble() %>%",
        "+ ",
        "  arrange(desc(NES))",
        "> ",
        "",
        "> ",
        "fgseaResTidy %>%",
        "+ ",
        "  dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%",
        "+ ",
        "  arrange(padj) %>%",
        "+ ",
        "  DT::datatable()",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.2)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.3)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "res1 <- na.omit(tumour_v_ctrl)",
        "> ",
        "",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                      lab=rownames(res1),",
        "+ ",
        "                    x=\"log2FoldChange\",",
        "+ ",
        "                    y=\"pvalue\",",
        "+ ",
        "                    selectLab=plot_top_20,",
        "+ ",
        "                    drawConnectors=TRUE,",
        "+ ",
        "                    FCcutoff=1.0,",
        "+ ",
        "                    pCutoff=0.05,",
        "+ ",
        "                    title=\"Volcano Plot\",",
        "+ ",
        "                    subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                    legendLabSize=8,",
        "+ ",
        "                    caption = paste0('Total Genes = ', nrow(res1)))",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(biomaRt)",
        "> ",
        "library(tximport)",
        "> ",
        "library(rhdf5)",
        "> ",
        "library(gplots)",
        "> ",
        "library(org.Hs.eg.db)",
        "> ",
        "library(DESeq2)",
        "> ",
        "library(DT)",
        "> ",
        "library(apeglm)",
        "> ",
        "library(RColorBrewer)",
        "> ",
        "library(IHW)",
        "> ",
        "library(PCAtools)",
        "> ",
        "library(pheatmap)",
        "> ",
        "library(clusterProfiler)",
        "> ",
        "library(EnhancedVolcano)",
        "> ",
        "library(ComplexHeatmap)",
        "> ",
        "library(circlize)",
        "> ",
        "library(fgsea)",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(ggpubr)",
        "> ",
        "quant_dir <- \"/home/rstudio/\"",
        "> ",
        "list.files(quant_dir)",
        " [1] \"c6.all.v2023.2.Hs.symbols.gmt\" \"control1\"                     \n [3] \"control2\"                      \"control3\"                     \n [5] \"log2_counts.txt\"               \"MA511-S.murphy\"               \n [7] \"normalised_counts.txt\"         \"samples.csv\"                  \n [9] \"tumour1\"                       \"tumour2\"                      \n[11] \"tumour3\"                      \n",
        "> ",
        "samples <- read.csv(paste0(quant_dir, \"/samples.csv\"), header=T, row.names = \"sample\", stringsAsFactors = T)",
        "> ",
        "samples",
        "> ",
        "samples$replicate <- factor(samples$replicate)",
        "> ",
        "",
        "> ",
        "factor_cols <- sapply(samples, is.factor)",
        "> ",
        "factor_cols",
        "condition replicate \n     TRUE      TRUE \n",
        "> ",
        "files <- file.path(quant_dir, rownames(samples), \"abundance.tsv\")",
        "> ",
        "names(files) <- paste0(rownames(samples))",
        "> ",
        "files",
        "                               control1                                control2 \n\"/home/rstudio//control1/abundance.tsv\" \"/home/rstudio//control2/abundance.tsv\" \n                               control3                                 tumour1 \n\"/home/rstudio//control3/abundance.tsv\"  \"/home/rstudio//tumour1/abundance.tsv\" \n                                tumour2                                 tumour3 \n \"/home/rstudio//tumour2/abundance.tsv\"  \"/home/rstudio//tumour3/abundance.tsv\" \n",
        "> ",
        "mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "> ",
        "tx2gene <- getBM(attributes = c(\"ensembl_transcript_id_version\", \"hgnc_symbol\"), mart = mart, useCache = FALSE)",
        "> ",
        "head(tx2gene)",
        "> ",
        "txi <- tximport(files, type = \"kallisto\", tx2gene = tx2gene)",
        "> ",
        "head(txi$abundance)",
        "          control1     control2     control3      tumour1      tumour2      tumour3\n      7032.9440367 7410.7723575 7.136402e+03 7.102417e+03 7174.6054317 7160.9240177\nA1BG     5.7645150    4.4543900 6.945454e+00 5.826272e+00    6.6909090    3.9739970\nA1CF     0.0211616    0.0000000 8.789296e-02 1.421432e-02    0.0352926    0.0229366\nA2M    119.7816420  103.0222130 1.131782e+02 1.002309e+02   91.3623100  106.2498200\nA2ML1    0.2314672    0.0266311 8.024680e-02 4.832294e-01    0.2613149    0.5512492\nA2MP1    0.5810670",
        "    0.6913360 5.689230e-01 8.482020e-01    0.6641670    0.9355350\n",
        "> ",
        "dds <- DESeqDataSetFromTximport(txi, colData = samples, design = ~ replicate + condition )",
        "> ",
        "dds$condition <- relevel(dds$condition, ref = \"control\")",
        "> ",
        "dds <- DESeq(dds)",
        "> ",
        "resultsNames(dds)",
        "[1] \"Intercept\"                   \"replicate_2_vs_1\"           \n[3] \"replicate_3_vs_1\"            \"condition_tumour_vs_control\"\n",
        "> ",
        "dds <- DESeq(dds)",
        "> ",
        "resultsNames(dds)",
        "[1] \"Intercept\"                   \"replicate_2_vs_1\"           \n[3] \"replicate_3_vs_1\"            \"condition_tumour_vs_control\"\n",
        "> ",
        "counts <- counts(dds, normalized=TRUE)",
        "> ",
        "log2_counts <- assay(normTransform(dds))",
        "> ",
        "rld_counts <- assay(rlog(dds))",
        "> ",
        "",
        "> ",
        "library(vsn)",
        "> ",
        "library(hexbin)",
        "> ",
        "",
        "> ",
        "log2_plt <- meanSdPlot(log2_counts, ranks=FALSE, plot=FALSE)",
        "> ",
        "log2_plt$gg + ggtitle(\"Log2 + PC Transformation\") + xlim(0,20)",
        "> ",
        "rld_plt <- meanSdPlot(rld_counts, ranks=FALSE, plot=FALSE)",
        "> ",
        "rld_plt$gg + ggtitle(\"Rlog Transformation\") + xlim(0,20)",
        "> ",
        "write.table(counts, \"normalised_counts.txt\", sep=\"\\t\", quote = F)",
        "> ",
        "write.table(log2_counts, \"log2_counts.txt\", sep=\"\\t\", quote = F)",
        "> ",
        "sampleDists <- dist(t(rld_counts))",
        "> ",
        "",
        "> ",
        "sampleDistMatrix <- as.matrix(sampleDists)",
        "> ",
        "",
        "> ",
        "colnames(sampleDistMatrix) <- NULL",
        "> ",
        "",
        "> ",
        "ann <- data.frame(condition = samples$condition)",
        "> ",
        "",
        "> ",
        "col <- c(\"blue\", \"red1\")",
        "> ",
        "names(col) <- c(\"tumour\", \"control\")",
        "> ",
        "ann_col <- list(Condition = col)",
        "> ",
        "",
        "> ",
        "## match annotation rownames to distance mat",
        "> ",
        "rownames(ann) <- rownames(sampleDistMatrix)",
        "> ",
        "",
        "> ",
        "pheatmap(mat=sampleDistMatrix,",
        "+ ",
        "         clustering_distance_rows=sampleDists,",
        "+ ",
        "         clustering_distance_cols=sampleDists,",
        "+ ",
        "         annotation_col = ann,",
        "+ ",
        "         annotation_colors = ann_col,",
        "+ ",
        "         col=hcl.colors(100,\"GnBu\",rev=T))",
        "> ",
        "p <- pca(rld_counts, metadata = samples)",
        "> ",
        "",
        "> ",
        "biplot(p,",
        "+ ",
        "       colby = 'condition',",
        "+ ",
        "       colkey = c('tumour'='royalblue', 'control'='red1'),",
        "+ ",
        "       hline = 0,",
        "+ ",
        "       vline = 0,",
        "+ ",
        "       legendPosition = 'right',",
        "+ ",
        "       legendLabSize = 12,",
        "+ ",
        "       legendIconSize = 8.0,",
        "+ ",
        "       title = 'PCA bi-plot',",
        "+ ",
        "       subtitle = 'PC1 versus PC2')",
        "> ",
        "tumour_v_ctrl <- results(dds, filterFun=ihw, alpha=0.05, c(\"condition\", \"tumour\", \"control\"))",
        "> ",
        "res1 <- lfcShrink(dds=dds, res=tumour_v_ctrl, coef=4, type=\"apeglm\")",
        "> ",
        "summary(res1)",
        "\nout of 21474 with nonzero total read count\nadjusted p-value < 0.05\nLFC > 0 (up)       : 269, 1.3%\nLFC < 0 (down)     : 199, 0.93%\noutliers [1]       : 0, 0%\n[1] see 'cooksCutoff' argument of ?results\nsee metadata(res)$ihwResult on hypothesis weighting\n\n",
        "> ",
        "get_upregulated <- function(df){",
        "+ ",
        "    key <- intersect(rownames(df)[which(df$log2FoldChange>=1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "  results <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "    return(results)",
        "+ ",
        "}",
        "> ",
        "get_downregulated <- function(df){",
        "+ ",
        "    key <- intersect(rownames(df)[which(df$log2FoldChange<=-1)], rownames(df)[which(df$pvalue<=0.05)])",
        "+ ",
        "    results <- as.data.frame((df)[which(rownames(df) %in% key),])",
        "+ ",
        "    return(results)",
        "+ ",
        "}",
        "> ",
        "annotate_de_genes <- function(df){",
        "+ ",
        "",
        "+ ",
        "    df$hgnc_symbol <- rownames(df)",
        "+ ",
        "    mart <- useMart(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\")",
        "+ ",
        "    info <- getBM(attributes=c(\"hgnc_symbol\",",
        "+ ",
        "                               \"ensembl_gene_id_version\",",
        "+ ",
        "                               \"chromosome_name\",",
        "+ ",
        "                               \"start_position\",",
        "+ ",
        "                               \"end_position\",",
        "+ ",
        "                               \"strand\",",
        "+ ",
        "                               \"entrezgene_description\"),",
        "+ ",
        "                  filters = c(\"hgnc_symbol\"),",
        "+ ",
        "                  values = df$hgnc_symbol,",
        "+ ",
        "                  mart = mart,",
        "+ ",
        "                  useCache=FALSE)",
        "+ ",
        "",
        "+ ",
        "    tmp <- merge(df, info, by=\"hgnc_symbol\")",
        "+ ",
        "    tmp$strand <- gsub(\"-1\", \"-\", tmp$strand)",
        "+ ",
        "    tmp$strand <- gsub(\"1\", \"+\", tmp$strand)",
        "+ ",
        "    tmp$hgnc_symbol <- make.names(tmp$hgnc_symbol, unique = T)",
        "+ ",
        "    tmp <- tmp[!grepl(\"CHR\", tmp$chromosome_name),]",
        "+ ",
        "",
        "+ ",
        "    output_col <- c(\"Gene\", \"Ensembl ID\", \"Chromosome\", \"Start\", \"Stop\", \"Strand\", \"Description\", \"Log2FC\", \"P-value\", \"Adj P-value\")",
        "+ ",
        "    tmp <- subset(tmp, select=c(hgnc_symbol, ensembl_gene_id_version, chromosome_name, start_position, end_position, strand, entrezgene_description, log2FoldChange, pvalue, padj))",
        "+ ",
        "    colnames(tmp) <- output_col",
        "+ ",
        "",
        "+ ",
        "    if(min(tmp$Log2FC) > 0){",
        "+ ",
        "        tmp <- tmp[order(-tmp$Log2FC),]",
        "+ ",
        "    }else{",
        "+ ",
        "        tmp <- tmp[order(tmp$Log2FC),]",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    return(tmp)",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "de_up <- get_upregulated(as.data.frame(res1))",
        "> ",
        "de_down <- get_downregulated(as.data.frame(res1))",
        "> ",
        "upregulated_genes <- annotate_de_genes(de_up)",
        "> ",
        "downregulated_genes <- annotate_de_genes(de_down)",
        "> ",
        "",
        "> ",
        "#confirm these worked",
        "> ",
        "head(upregulated_genes)",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                lab=rownames(res1),",
        "+ ",
        "                x=\"log2FoldChange\",",
        "+ ",
        "                y=\"pvalue\",",
        "+ ",
        "                selectLab=plot_top_20,",
        "+ ",
        "                drawConnectors=TRUE,",
        "+ ",
        "                legendPosition = \"none\",",
        "+ ",
        "                FCcutoff=1.0,",
        "+ ",
        "                pCutoff=0.05,",
        "+ ",
        "                title=\"Volcano Plot\",",
        "+ ",
        "                subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                caption = paste0('Total Genes = ', nrow(res1)),",
        "+ ",
        "                xlim=c(min_width, max_width),",
        "+ ",
        "                ylim=c(0, max_height))",
        "> ",
        "res1 <- na.omit(tumour_v_ctrl)",
        "> ",
        "",
        "> ",
        "min_width <- min(res1$log2FoldChange)",
        "> ",
        "max_width <- max(res1$log2FoldChange)",
        "> ",
        "max_height <- -log10(min(res1[res1$pvalue>0, 5]))",
        "> ",
        "",
        "> ",
        "up <- subset(res1, res1$log2FoldChange > 1 & res1$pvalue <= 0.05)",
        "> ",
        "up <- up[order(-up$log2FoldChange),]",
        "> ",
        "up_list <- head(rownames(up), n=10L)",
        "> ",
        "",
        "> ",
        "down <- subset(res1, res1$log2FoldChange < -1 & res1$pvalue <= 0.05)",
        "> ",
        "down <- down[order(down$log2FoldChange),]",
        "> ",
        "down_list <- head(rownames(down), n=10L)",
        "> ",
        "",
        "> ",
        "plot_top_20 <- c(up_list, down_list)",
        "> ",
        "EnhancedVolcano(res1,",
        "+ ",
        "                      lab=rownames(res1),",
        "+ ",
        "                    x=\"log2FoldChange\",",
        "+ ",
        "                    y=\"pvalue\",",
        "+ ",
        "                    selectLab=plot_top_20,",
        "+ ",
        "                    drawConnectors=TRUE,",
        "+ ",
        "                    FCcutoff=1.0,",
        "+ ",
        "                    pCutoff=0.05,",
        "+ ",
        "                    title=\"Volcano Plot\",",
        "+ ",
        "                    subtitle=\"Tumour vs. Control\",",
        "+ ",
        "                    legendLabSize=8,",
        "+ ",
        "                    caption = paste0('Total Genes = ', nrow(res1)))",
        "> ",
        "res1 <- na.omit(res1)",
        "> ",
        "subset <- rld_counts[, 1:6]",
        "> ",
        "",
        "> ",
        "up <- rownames(de_up)",
        "> ",
        "down <- rownames(de_down)",
        "> ",
        "",
        "> ",
        "key <- c(up, down)",
        "> ",
        "subset <- subset[which(rownames(subset) %in% key),]",
        "> ",
        "",
        "> ",
        "mat <- as.matrix(scale(t(subset), center = T))",
        "> ",
        "",
        "> ",
        "ann <- data.frame(Condition = c(rep(\"Control\", 3), rep(\"Tumour\", 3)))",
        "> ",
        "rownames(ann) <- rownames(mat)",
        "> ",
        "col <- c(\"blue\", \"forestgreen\")",
        "> ",
        "names(col) <- c(\"Control\", \"Tumour\")",
        "> ",
        "ann_col <- list(Condition = col)",
        "> ",
        "",
        "> ",
        "pheatmap(t(mat), ",
        "+ ",
        "         show_rownames = FALSE,",
        "+ ",
        "         annotation_col = ann,",
        "+ ",
        "         annotation_colors = ann_col,",
        "+ ",
        "         color = hcl.colors(100, \"PRGn\",rev=F))",
        "> ",
        "res <- as.data.frame(res1) # tumour vs control",
        "> ",
        "res$hgnc_symbol <- rownames(res)",
        "> ",
        "",
        "> ",
        "fgsea_rank <- res %>%",
        "+ ",
        "              dplyr::select(hgnc_symbol, log2FoldChange) %>%",
        "+ ",
        "              na.omit() %>%",
        "+ ",
        "              distinct() %>%",
        "+ ",
        "              group_by(hgnc_symbol) %>%",
        "+ ",
        "              summarize(stat=mean(log2FoldChange))",
        "> ",
        "",
        "> ",
        "fgsea_rank",
        "> ",
        "rank <- deframe(fgsea_rank)",
        "> ",
        "head(rank, 20)",
        "                     A1BG         A1CF          A2M        A2ML1        A2MP1 \n-0.013521913 -0.070717455  0.151302767 -0.178179246  2.339741878  0.397354802 \n     A3GALT2       A4GALT        A4GNT         AAAS         AACS       AACSP1 \n-0.003578694  1.417910706 -0.449161265 -0.050395570 -0.240345260 -1.601524288 \n       AADAC      AADACL3      AADACL4        AADAT        AAGAB         AAK1 \n-0.888838934 -0.004556136  1.671566619  0.139796142 -0.191357582  0.326965135 \n       AAMDC         AAMP \n-0.059535870 ",
        "-0.026687365 \n",
        "> ",
        "pathway <- gmtPathways(\"/home/rstudio/c6.all.v2023.2.Hs.symbols.gmt\")",
        "> ",
        "head(pathway, 1)",
        "$AKT_UP.V1_DN\n  [1] \"ACKR3\"    \"ADGRL1\"   \"ADHFE1\"   \"ALPL\"     \"AMPD2\"    \"ANGPTL4\"  \"AQP5\"    \n  [8] \"ASF1A\"    \"ASS1\"     \"AXIN2\"    \"BCS1L\"    \"BEX4\"     \"BLVRB\"    \"BTBD2\"   \n [15] \"C11orf71\" \"C1R\"      \"C1S\"      \"CAP2\"     \"CAV2\"     \"CBS\"      \"CD248\"   \n [22] \"CDC42BPA\" \"CDH16\"    \"CDPF1\"    \"CELA1\"    \"CHAD\"     \"CHN2\"     \"CHST12\"  \n [29] \"CNN2\"     \"COL17A1\"  \"CSDC2\"    \"DNAJA3\"   \"DPT\"      \"DRAM1\"    \"EDARADD\" \n [36] \"EFEMP1\"   \"EFEMP2\"   \"EIF4E3\"   \"ESR2\"     \"EXOSC1\"   \"FAH\"      \"FAM20C\"  \n",
        " [43] \"FANK1\"    \"FAS\"      \"FBXO32\"   \"FHOD3\"    \"FKBP11\"   \"FMO2\"     \"FMO3\"    \n [50] \"FUT10\"    \"FUT8\"     \"FXYD1\"    \"G6PC2\"    \"GALNT16\"  \"GAS1\"     \"GATAD2B\" \n [57] \"GHR\"      \"GNA14\"    \"GNMT\"     \"GRAMD1A\"  \"GSPT2\"    \"GSTA4\"    \"HEBP1\"   \n [64] \"HIC1\"     \"HMGCS2\"   \"HPS1\"     \"HTRA1\"    \"IBSP\"     \"ID3\"      \"IFFO1\"   \n [71] \"IFRD2\"    \"IL13RA1\"  \"IL17RC\"   \"IRS1\"     \"IRS2\"     \"ISLR\"     \"ITGBL1\"  \n [78] \"ITIH5\"    \"ITPKB\"    \"KCNK3\"    \"KCNN4\"    \"KCTD12\"   \"KLF2\"     \"KRT15\"   \n [85] \"KRT5\"    ",
        " \"LIMD1\"    \"LPL\"      \"LTC4S\"    \"MATN2\"    \"MEPE\"     \"MERTK\"   \n [92] \"MMAA\"     \"MOCOS\"    \"MRPS6\"    \"MSL2\"     \"MSRB2\"    \"MYOC\"     \"NAT8\"    \n [99] \"NCAM1\"    \"NID1\"     \"NR1D1\"    \"NT5DC3\"   \"OGN\"      \"PADI3\"    \"PAQR7\"   \n[106] \"PDE4B\"    \"PDE9A\"    \"PDGFRA\"   \"PDIA5\"    \"PDLIM3\"   \"PDLIM4\"   \"PDZRN3\"  \n[113] \"PHF1\"     \"PI16\"     \"PKP1\"     \"PLA2G4A\"  \"PLEK2\"    \"PLPP3\"    \"PLTP\"    \n[120] \"PM20D1\"   \"PNLIPRP1\" \"POLD2\"    \"POLI\"     \"PPP1R3C\"  \"PROM1\"    \"PTGIS\"   \n[127] \"PUS7\"     \"RAMP1\"    \"RCE1\"    ",
        " \"RECK\"     \"RMND1\"    \"RNF25\"    \"RORC\"    \n[134] \"RPAP3\"    \"RPS6KB2\"  \"RTKN\"     \"RXRB\"     \"S1PR3\"    \"SASH1\"    \"SATB1\"   \n[141] \"SCARA3\"   \"SCARA5\"   \"SCCPDH\"   \"SERPINF2\" \"SFRP2\"    \"SH3BGR\"   \"SIRT3\"   \n[148] \"SIX5\"     \"SLC18A1\"  \"SLC22A12\" \"SLC37A4\"  \"SLC39A13\" \"SLC39A4\"  \"SLC7A5\"  \n[155] \"SLCO3A1\"  \"SLIT3\"    \"SMARCD3\"  \"SNHG6\"    \"STAT5A\"   \"STMP1\"    \"SULT1E1\" \n[162] \"SYPL2\"    \"TCAF2\"    \"TCF21\"    \"TCF3\"     \"TEC\"      \"TIMP3\"    \"TNFRSF19\"\n[169] \"TNNC2\"    \"TNS2\"     \"TP53I13\"  \"TPD52L1\"  \"TSPAN4\"  ",
        " \"TSPYL4\"   \"TULP3\"   \n[176] \"TYW1\"     \"UPB1\"     \"VSIG2\"    \"WIF1\"     \"ZC3H12C\"  \"ZDHHC6\"   \"ZEB1\"    \n[183] \"ZFYVE21\"  \"ZNF213\"   \"ZNF385A\"  \"ZNF771\"   \"ZSCAN26\" \n\n",
        "> ",
        "fgsea <- fgsea(pathways=pathway, stats=rank, nperm=1000)",
        "> ",
        "",
        "> ",
        "fgseaResTidy <- fgsea %>%",
        "+ ",
        "  as_tibble() %>%",
        "+ ",
        "  arrange(desc(NES))",
        "> ",
        "",
        "> ",
        "fgseaResTidy %>%",
        "+ ",
        "  dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%",
        "+ ",
        "  arrange(padj) %>%",
        "+ ",
        "  DT::datatable()",
        "> ",
        "filtered_pathway <- subset(fgsea, NES > 1.2)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_up <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_up){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}",
        "> ",
        "filtered_pathway <- subset(fgsea, NES < -1.3)",
        "> ",
        "filtered_pathway",
        "> ",
        "filt_down <- as.vector(filtered_pathway$pathway)",
        "> ",
        "",
        "> ",
        "for (i in filt_down){",
        "+ ",
        "    plt <- plotEnrichment(pathway = pathway[[i]],",
        "+ ",
        "    gseaParam = 1, ticksSize = 0.5, stats= rank) +",
        "+ ",
        "    labs(title=i) + theme(plot.title = element_text(hjust = 0.5, face=\"bold\"))",
        "+ ",
        "    print(plt)",
        "+ ",
        "}"
    ]
}